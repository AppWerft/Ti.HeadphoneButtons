/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.headphonebuttons;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollEventCallback;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;

import android.content.ComponentName;
import android.content.Context;
import android.media.AudioManager;
import android.util.Log;
import android.view.KeyEvent;

@Kroll.module(name = "Headphonekeyboard", id = "de.appwerft.headphonebuttons")
public class HeadphonebuttonsModule extends KrollModule {
	public static final String LCAT = "HeadPhoneButtons  ðŸ“¢ðŸ“¢";
	HeadphoneButtonReceiver headphoneButtonReceiver;
	static KrollFunction callback;
	ComponentName receiver;
	static TiApplication mApp;
	AudioManager audioManager;

	public HeadphonebuttonsModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(final TiApplication app) {
		mApp = app;
	}

	public void onDestroy() {
		if (audioManager != null)
			audioManager.unregisterMediaButtonEventReceiver(receiver);
	}

	@Override
	public int addEventListener(String arg0, KrollEventCallback arg1) {
		// TODO Auto-generated method stub
		return super.addEventListener(arg0, arg1);
	}

	@Kroll.method
	public void registerListener() {
		Context ctx = TiApplication.getAppRootOrCurrentActivity()
				.getApplicationContext();
		audioManager = (AudioManager) ctx
				.getSystemService(Context.AUDIO_SERVICE);
		audioManager.requestAudioFocus(new OnAudioFocusChangeListener(),
				AudioManager.STREAM_MUSIC,
				AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);
		audioManager.registerMediaButtonEventReceiver(new ComponentName(ctx
				.getPackageName(), HeadphoneButtonReceiver.class.getName()));
		Log.d(LCAT, "headphoneButtonReceiver registered");
	}

	private class OnAudioFocusChangeListener implements
			AudioManager.OnAudioFocusChangeListener {
		@Override
		public void onAudioFocusChange(int focusChange) {
			if (focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT) {
				Log.e("ClassOnAudioFocusChangeListener: ",
						"AUDIOFOCUS_LOSS_TRANSIENT");
			} else if (focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK) {
				Log.e("ClassOnAudioFocusChangeListener: ",
						"AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK");
			} else if (focusChange == AudioManager.AUDIOFOCUS_GAIN) {
				Log.e("ClassOnAudioFocusChangeListener: ", "AUDIOFOCUS_GAIN");
				// mAudioManager.registerMediaButtonEventReceiver(mMediaButtonEventComponenName);
			} else if (focusChange == AudioManager.AUDIOFOCUS_LOSS) {
				Log.e("ClassOnAudioFocusChangeListener: ", "AUDIOFOCUS_LOSS");
			}
		}
	};

	public static void sendBack(KrollDict event) {
		mApp.fireAppEvent("mediaButton", event);
	}

}
