/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.headphonekeyboard;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.view.KeyEvent;

@Kroll.module(name = "Headphonekeyboard", id = "de.appwerft.headphonekeyboard")
public class HeadphonekeyboardModule extends KrollModule {
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	MediaButtonIntentReceiver receiver;
	KrollFunction callback;

	public HeadphonekeyboardModule() {
		super();

	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {

	}

	public class MediaButtonIntentReceiver extends BroadcastReceiver {

		public MediaButtonIntentReceiver() {
			super();
		}

		@Override
		public void onReceive(Context context, Intent intent) {
			String intentAction = intent.getAction();
			if (!Intent.ACTION_MEDIA_BUTTON.equals(intentAction)) {
				return;
			}
			KeyEvent event = (KeyEvent) intent
					.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
			if (event == null) {
				return;
			}
			int action = event.getAction();
			if (action == KeyEvent.ACTION_DOWN) {
				KrollDict dict = new KrollDict();
				dict.put("keycode", action);
				callback.call(getKrollObject(), dict);

			}
			// abortBroadcast();
		}
	}

	@Kroll.method
	public void addEventListener(String event, KrollFunction fn) {
		if (fn != null && fn instanceof KrollFunction) {
			callback = (KrollFunction) fn;
		}
		Context ctx = TiApplication.getInstance().getApplicationContext();
		IntentFilter filter = new IntentFilter(Intent.ACTION_MEDIA_BUTTON);
		receiver = new MediaButtonIntentReceiver();
		ctx.registerReceiver(receiver, filter);
	}

	@Kroll.method
	public void removeEventListener(String event) {
		Context ctx = TiApplication.getInstance().getApplicationContext();
		ctx.unregisterReceiver(receiver);
	}

}
